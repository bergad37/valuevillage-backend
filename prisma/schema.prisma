// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

model User {
  id         String     @id @default(uuid())
  name       String
  email      String     @unique
  password   String
  role       Role       @relation(fields: [roleId], references: [id])
  roleId     String
  socialMedia Json?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Role {
  id    String  @id @default(uuid())
  name  String  @unique
  users User[]
}

model HeroSection {
  id          String   @id @default(uuid())
  mainTitle   String
  description String
  slideImages String[]
  addressLine Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model AboutUs{
  id          String   @id @default(uuid())
  title       String
  slogan      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ContactUs{
  id                String   @id @default(uuid())
  emailAddress      String[]
  phoneAddress      String[]
  addressLine       Json?
  officeHours       String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Property {
  id          String   @id @default(uuid())
  name        String
  status      String   // FOR SALE, FOR RENT, etc.
  mainBanner  String   // URL for main banner image
  banners     String[] // Array of banner image URLs
  description String   @db.Text // Long text description
  propertyId  String?  // Optional property identifier
  homeArea    String?  // Home area measurement
  beds        String?  // Number of bedrooms
  baths       String?  // Number of bathrooms
  yearBuilt   Int?     // Year the property was built
  floors      Json?    // Array of floor objects with title, image, description
  video       String?  // Video URL
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Blog {
  id       String   @id @default(uuid())
  image    String
  title    String
  author   String
  category String
  date     DateTime
  description   String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
